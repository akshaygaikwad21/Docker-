sudo docker pull <image> --- to pull the images

sudo docker images 

sudo docker run -d -p host port:port --name <container name> <image name>

sudo docker ps

sudo docker kill <container id>

sudo docker rmi -f <image name>

sudo docker exec -it <container name> bash

--------------------------------------------------------------------------------------------------

9-4-25

1)sudo sh -c 'docker rm -f $(docker ps -aq)' --- To forcefully remove all container at a time.

2)sudo docker commit <changed container name> <image name> --- To create a new image from changed container
    Ex- sudo docker commit cont1 MyImage1 

3)sudo docker commit cont1 image1


4)sudo docker tag image1 <username>/<image New Name>:007 --- Renamed the image name
    Ex- sudo docker tag image1 akshaygaikwad21/nginx-mod:007


5)sudo docker login -- To login to DockerHub Registory

6)sudo docker push <username>/<image New name>:007 --- To push image to registory
    Ex- sudo docker tag akshaygaikwad21/nginx-mod:007


7)For troubleshoot the container -
    sudo docker log   --- to see logs

    sudo docker inspect --- to see full info. of container

--------------------------------------------------------------------------------------------------
10-4-25

    # Docker Network

1) gpasswd -a ec2-user docker ---- To add docker user in the docker group
    After this again reconnect to your Ec2-instance. 

2) There are 3 types od docker network-
    - Bridge - By default --> it allocates ip address i.e /16 i.e 65,000 container
    - Host - ---------------> This network container can connect with each other within its n/w.
    - None - ---------------> This network's container are isolated i.e cannot connect with anyone.


3) To connect Bridge netowrk with eachother.
    -go to the 1st bridge n/w's containers shell
    - ping <ip address of the cont2 >


4) To create new network 
    - sudo docker network create Akshay

5) To create a container inside that netowrk.
    - sudo docker run -d -P --network Akshay cont1 nginx
    
6)  To connect to New n/w.
docker netowrk connect bridge <container name>
Ex - docker network connect bridge container6

--------------------------------------------------------------------------------------------------

11-4-25

** Docker Volume **

- Volume is a Storage.
- Volume in nothing but mounting of containers directory into server's directory.

- 2 Types of Volmes.

    - Bind mount volume
    - Permanat volume

    - Bind mount volume
        - it is temporary volume.
        - These volumes can be created in any location.
        - High risk.
        - used for testing purpose.

    - Permanant Volume
        - It is permanant volumes.
        - These volumes are created inside the var/lib/docker/volumes/
        - Low risk.
        - Used for each.



Commands

1) sudo docker run -d -P -v /root/akshay/:/opt --name cont1 nginx

    - It will create the volume name "akshay" in the mentioned directory.
    - and will be sharing the data with /opt directory of container.

2) sudo docker run -d -P -v volume1:/usr/share/nginx/html --name cont2 nginx.

    - It will create the volume name "volume1" in the default root directory i.e var/lib/docker/volumes
    - and will be sharing the data with /usr/share/nginx/html directory of the container.

--------------------------------------------------------------------------------------------------

17-4-25


1) SCP command 
    scp -i .\Linuxkey.pem .\mysql-connector.jar .\student.war ubuntu@13.233.130.68:/home/ubuntu


2) Config to be add in contect.xml file 

<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
		  maxTotal="100" maxIdle="30" maxwaitMillis="10000"
		  username="root" password="1234" driverClassName="com.mysql.jdbc.Driver"
		  url="jdbc:mysql://172.17.0.2:3306/mydb"/>